# Generated by Django 2.2.5 on 2019-09-14 13:57

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(blank=True, default='', max_length=18, null=True, verbose_name='手机号')),
                ('alipay_openid', models.CharField(blank=True, default='', max_length=60, null=True, verbose_name='支付宝openid')),
                ('weixin_openid', models.CharField(blank=True, default='', max_length=60, null=True, verbose_name='微信openid')),
                ('weixin_web_openid', models.CharField(blank=True, default='', max_length=60, null=True, verbose_name='微信web用户openid')),
                ('baidu_openid', models.CharField(blank=True, default='', max_length=60, null=True, verbose_name='百度openid')),
                ('status', models.CharField(choices=[('new', '新用户'), ('normal', '正常'), ('lp', '限制购买'), ('lw', '限制提款'), ('al', '限制全部功能'), ('frozen', '冻结')], default='0', max_length=20, verbose_name='用户状态')),
                ('token', models.CharField(default='', max_length=254, verbose_name='口令字符串')),
                ('user_level', models.CharField(choices=[('normal', '普通用户'), ('vip', '高级用户')], default='normal', max_length=20, verbose_name='用户等级')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 't_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VerifyCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.PositiveIntegerField(default=0, verbose_name='排序优先级')),
                ('is_enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('is_delete', models.BooleanField(default=True, verbose_name='是否删除')),
                ('delete_time', models.DateTimeField(blank=True, default=0, null=True, verbose_name='删除时间')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('extends', models.TextField(blank=True, null=True, verbose_name='扩展数据(json格式存储)')),
                ('code', models.CharField(max_length=10, verbose_name='验证码')),
                ('mobile', models.CharField(blank=True, default='', max_length=18, null=True, verbose_name='手机号')),
            ],
            options={
                'verbose_name': '短信验证码',
                'verbose_name_plural': '短信验证码',
                'db_table': 't_verify_codes',
                'ordering': ('-add_time',),
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.PositiveIntegerField(default=0, verbose_name='排序优先级')),
                ('is_enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('is_delete', models.BooleanField(default=True, verbose_name='是否删除')),
                ('delete_time', models.DateTimeField(blank=True, default=0, null=True, verbose_name='删除时间')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('extends', models.TextField(blank=True, null=True, verbose_name='扩展数据(json格式存储)')),
                ('nickname', models.CharField(blank=True, default='', max_length=60, null=True, verbose_name='昵称')),
                ('gender', models.CharField(blank=True, choices=[('male', '男'), ('female', '女')], default='', max_length=6, null=True, verbose_name='性别')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('integral', models.DecimalField(decimal_places=2, default=0, max_digits=18, verbose_name='积分')),
                ('locking_integral', models.DecimalField(decimal_places=2, default=0, max_digits=18, verbose_name='锁定积分')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=18, verbose_name='余额')),
                ('locking_balance', models.DecimalField(decimal_places=2, default=0, max_digits=18, verbose_name='锁定余额')),
                ('financial_balance', models.DecimalField(decimal_places=2, default=0, max_digits=18, verbose_name='理财金额')),
                ('locking_financial_balance', models.DecimalField(decimal_places=2, default=0, max_digits=18, verbose_name='锁定理财金额')),
                ('referrer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='team', to='user.UserProfile', verbose_name='推荐人')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='所属用户')),
            ],
            options={
                'verbose_name': '个人信息',
                'verbose_name_plural': '个人信息',
                'db_table': 't_user_profiles',
                'ordering': ('-sort', '-add_time'),
            },
        ),
        migrations.CreateModel(
            name='LoginRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.PositiveIntegerField(default=0, verbose_name='排序优先级')),
                ('is_enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('is_delete', models.BooleanField(default=True, verbose_name='是否删除')),
                ('delete_time', models.DateTimeField(blank=True, default=0, null=True, verbose_name='删除时间')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('extends', models.TextField(blank=True, null=True, verbose_name='扩展数据(json格式存储)')),
                ('login_ip', models.GenericIPAddressField(default='', verbose_name='用户此次登录的IP地址')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_records', to=settings.AUTH_USER_MODEL, verbose_name='登录用户')),
            ],
            options={
                'verbose_name': '用户登录记录',
                'verbose_name_plural': '用户登录记录',
                'db_table': 't_login_records',
                'ordering': ('-add_time',),
            },
        ),
        migrations.CreateModel(
            name='AgentGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.PositiveIntegerField(default=0, verbose_name='排序优先级')),
                ('is_enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('is_delete', models.BooleanField(default=True, verbose_name='是否删除')),
                ('delete_time', models.DateTimeField(blank=True, default=0, null=True, verbose_name='删除时间')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('extends', models.TextField(blank=True, null=True, verbose_name='扩展数据(json格式存储)')),
                ('name', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='代理分组名称')),
                ('desc', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='代理分组描述')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='供应商')),
            ],
            options={
                'verbose_name': '代理分组',
                'verbose_name_plural': '代理分组',
                'db_table': 't_agent_groups',
                'ordering': ('-sort', '-add_time'),
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort', models.PositiveIntegerField(default=0, verbose_name='排序优先级')),
                ('is_enable', models.BooleanField(default=True, verbose_name='是否启用')),
                ('is_delete', models.BooleanField(default=True, verbose_name='是否删除')),
                ('delete_time', models.DateTimeField(blank=True, default=0, null=True, verbose_name='删除时间')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('extends', models.TextField(blank=True, null=True, verbose_name='扩展数据(json格式存储)')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='agents', to=settings.AUTH_USER_MODEL, verbose_name='代理')),
                ('agent_group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.AgentGroup', verbose_name='所属分组')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='suppliers', to=settings.AUTH_USER_MODEL, verbose_name='供应商')),
            ],
            options={
                'verbose_name': '代理',
                'verbose_name_plural': '代理',
                'db_table': 't_agents',
                'ordering': ('-sort', '-add_time'),
            },
        ),
    ]
